# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "exprsBINARY COMMENT DECIMAL HEXADECIMAL KEYWORD LPAREN NUMERAL QSYMBOL RPAREN STRING SYMBOLexpr : NUMERALexpr : DECIMALexpr : HEXADECIMALexpr : BINARYexpr : STRINGexpr : KEYWORDexpr : SYMBOLexpr : QSYMBOLexpr : LPAREN exprs RPARENexprs :exprs : exprs exprexprs : exprs COMMENT"

_lr_action_items = {
    "COMMENT": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            3,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            3,
            -9,
        ],
    ),
    "NUMERAL": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            4,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            4,
            -9,
        ],
    ),
    "DECIMAL": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            5,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            5,
            -9,
        ],
    ),
    "HEXADECIMAL": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            6,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            6,
            -9,
        ],
    ),
    "BINARY": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            7,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            7,
            -9,
        ],
    ),
    "STRING": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            8,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            8,
            -9,
        ],
    ),
    "KEYWORD": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            9,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            9,
            -9,
        ],
    ),
    "SYMBOL": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            10,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            10,
            -9,
        ],
    ),
    "QSYMBOL": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            11,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            11,
            -9,
        ],
    ),
    "LPAREN": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -10,
            12,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            12,
            -9,
        ],
    ),
    "$end": (
        [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            14,
        ],
        [
            -10,
            0,
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -9,
        ],
    ),
    "RPAREN": (
        [
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
        ],
        [
            -11,
            -12,
            -1,
            -2,
            -3,
            -4,
            -5,
            -6,
            -7,
            -8,
            -10,
            14,
            -9,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "exprs": (
        [
            0,
            12,
        ],
        [
            1,
            13,
        ],
    ),
    "expr": (
        [
            1,
            13,
        ],
        [
            2,
            2,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> exprs", "S'", 1, None, None, None),
    ("expr -> NUMERAL", "expr", 1, "p_expr_numeral", "sexpr.py", 86),
    ("expr -> DECIMAL", "expr", 1, "p_expr_decimal", "sexpr.py", 91),
    ("expr -> HEXADECIMAL", "expr", 1, "p_expr_hexadecimal", "sexpr.py", 96),
    ("expr -> BINARY", "expr", 1, "p_expr_binary", "sexpr.py", 101),
    ("expr -> STRING", "expr", 1, "p_expr_string", "sexpr.py", 106),
    ("expr -> KEYWORD", "expr", 1, "p_expr_keyword", "sexpr.py", 111),
    ("expr -> SYMBOL", "expr", 1, "p_expr_symbol", "sexpr.py", 116),
    ("expr -> QSYMBOL", "expr", 1, "p_expr_qsymbol", "sexpr.py", 121),
    ("expr -> LPAREN exprs RPAREN", "expr", 3, "p_expr_compound", "sexpr.py", 126),
    ("exprs -> <empty>", "exprs", 0, "p_exprs_first", "sexpr.py", 131),
    ("exprs -> exprs expr", "exprs", 2, "p_exprs_more", "sexpr.py", 136),
    ("exprs -> exprs COMMENT", "exprs", 2, "p_exprs_comment", "sexpr.py", 142),
]
